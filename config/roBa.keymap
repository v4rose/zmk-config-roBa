#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W           &kp E           &kp R                           &kp T                                   &kp Y      &kp U  &lt MO(5) &kp I    &kp O    &kp P
&kp A             &kp S           &kp D           &kp F                           &kp G      &lt MO(1) &kp ESC                  &kp MINUS    &kp H      &kp J  &kp K      &kp L    &mt RSHIFT SQT
&mt LEFT_SHIFT Z  &kp X           &kp C           &kp V                           &kp B      &kp TAB                       &kp QUESTION   &kp N      &kp M  &kp COMMA  &kp DOT  &mt RCTRL SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt MO(5) &kp LANG_2  &lt MO(2) &kp SPACE  &lt MO(3) &kp LANG_1       &kp BACKSPACE  &kp ENTER                                            &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&trans          &trans          &trans          &trans  &trans                          &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&trans          &trans          &trans          &trans  &trans  &trans          &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&kp LEFT_SHIFT  &trans          &trans          &trans  &trans  &trans          &trans   &trans  &trans  &trans  &trans  &kp F11
&kp LCTRL       &kp LEFT_WIN  &kp LEFT_ALT  &trans  &trans  &trans          &trans   &trans                                            &kp F12
            >;
        };

        NUM {
            bindings = <
&kp MINUS       &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS                        &kp AT            &kp LA(LEFT)  &kp LC(W)  &kp LA(RIGHT)  &kp BACKSPACE
&kp SLASH       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))        &kp UNDERSCORE  &kp EXCLAMATION   &mkp MB1    &mkp MB3   &mkp MB2        &kp PERCENT
&kp LEFT_SHIFT  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD    &kp EQUAL                      &kp QUESTION    &kp LEFT_BRACKET  &kp LC(C)     &kp LC(X)  &kp LC(V)       &mt RIGHT_SHIFT BACKSLASH
&trans          &kp NUMBER_0  &trans          &trans          &trans          &trans                         &trans            &trans                                                  &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)                    &trans                         &trans  &kp LC(LS(TAB))  &kp UP_ARROW    &kp LC(TAB)     &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW                &kp END  &trans          &trans  &trans  &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))        &trans   &trans          &trans  &trans  &trans           &trans          &trans           &trans
&trans          &trans                  &trans          &trans                         &trans   &trans          &trans  &trans                                                      &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans                                  &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &kp QUESTION  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans          &trans                                  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans          &trans          &trans          &trans                          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans          &trans          &trans          &trans  &trans          &trans          &trans          &trans          &trans          &trans          &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans          &bootloader     &trans          &trans          &trans          &trans          &bt BT_CLR
&trans  &trans          &trans          &trans          &trans  &trans          &trans          &trans                                                        &bt BT_CLR_ALL
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans                                  &trans
            >;
        };
    };
};
